using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using JsonBridgeEF.Seeding.Mappings.Models;

namespace JsonBridgeEF.Data.Configurations
{
    /// <summary>
    /// Configurazione della tabella <see cref="MappingRule"/> per Entity Framework.
    /// Definisce le relazioni con le entit√† collegate, gli indici e i vincoli di unicit√†.
    /// </summary>
    internal class MappingRuleConfig : IEntityTypeConfiguration<MappingRule>
    {
        /// <summary>
        /// Configura la mappatura per l'entit√† <see cref="MappingRule"/>.
        /// </summary>
        /// <param name="builder">Il costruttore dell'entit√† per definire la configurazione.</param>
        public void Configure(EntityTypeBuilder<MappingRule> builder)
        {
            // 1Ô∏è‚É£ Definisce la chiave primaria della tabella
            // üîπ Garantisce che ogni record abbia un identificativo univoco.
            builder.HasKey(e => e.Id);

            // 2Ô∏è‚É£ Relazione con MappingProject (FK obbligatoria)
            // üîπ Ogni MappingRule deve appartenere a un solo MappingProject.
            // üîπ Un MappingProject pu√≤ avere pi√π MappingRule.
            builder.HasOne(e => e.MappingProject)
                   .WithMany(mp => mp.MappingRules)
                   .HasForeignKey(e => e.MappingProjectId)
                   .IsRequired();

            // 3Ô∏è‚É£ Relazione con JsonFieldDef (FK obbligatoria)
            // üîπ Ogni MappingRule deve essere associata a un JsonFieldDef.
            // üîπ Uno stesso JsonFieldDef pu√≤ essere riutilizzato in pi√π MappingRule.
            builder.HasOne(e => e.JsonFieldDef)
                   .WithMany()
                   .HasForeignKey(e => e.JsonFieldDefId)
                   .IsRequired();

            // 4Ô∏è‚É£ Relazione con TargetPropertyDef (FK obbligatoria)
            // üîπ Ogni MappingRule deve essere associata a un TargetPropertyDef.
            // üîπ Un TargetPropertyDef pu√≤ essere utilizzato solo una volta in MappingRule.
            builder.HasOne(e => e.TargetPropertyDef)
                   .WithMany()
                   .HasForeignKey(e => e.TargetPropertyDefId)
                   .IsRequired();

            // 5Ô∏è‚É£ Configura la propriet√† JsFormula
            // üîπ Garantisce che JsFormula sia sempre valorizzata.
            // üîπ Limita la lunghezza massima a 1024 caratteri per evitare valori eccessivi.
            builder.Property(e => e.JsFormula)
                   .IsRequired()
                   .HasMaxLength(1024);

            // 6Ô∏è‚É£ Vincolo di unicit√† su (MappingProjectId, JsonFieldDefId, TargetPropertyDefId)
            // üîπ Garantisce che non possano esistere due MappingRule con la stessa combinazione
            //     di MappingProject, JsonFieldDef e TargetPropertyDef.
            builder.HasIndex(e => new 
            { 
                e.MappingProjectId, 
                e.JsonFieldDefId, 
                e.TargetPropertyDefId 
            }).IsUnique();

            // 7Ô∏è‚É£ Vincolo di unicit√† su TargetPropertyDefId
            // üîπ Garantisce che un TargetPropertyDef possa apparire solo una volta in MappingRule.
            builder.HasIndex(e => e.TargetPropertyDefId)
                   .IsUnique();
        }
    }
}