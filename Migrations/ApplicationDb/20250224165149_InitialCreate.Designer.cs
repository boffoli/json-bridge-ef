// <auto-generated />
using System;
using JsonBridgeEF.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JsonBridgeEF.Migrations.ApplicationDb
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250224165149_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("JsonBridgeEF.Models.Mapping.Definitions.JsonFieldDef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsKey")
                        .HasColumnType("INTEGER");

                    b.Property<int>("JsonSchemaDefId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SourceFieldPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("JsonSchemaDefId", "SourceFieldPath")
                        .IsUnique();

                    b.ToTable("JsonFieldDefs");
                });

            modelBuilder.Entity("JsonBridgeEF.Models.Mapping.Definitions.JsonSchemaDef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("JsonSchemaIdentifier")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("JsonSchemaIdentifier")
                        .IsUnique();

                    b.ToTable("JsonSchemaDefs");
                });

            modelBuilder.Entity("JsonBridgeEF.Models.Mapping.Definitions.TargetDbContextDef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Namespace")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Namespace")
                        .IsUnique();

                    b.ToTable("TargetDbContextDefs");
                });

            modelBuilder.Entity("JsonBridgeEF.Models.Mapping.Definitions.TargetPropertyDef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Namespace")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.Property<string>("RootClass")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TargetDbContextDefId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TargetDbContextDefId");

                    b.HasIndex("Namespace", "RootClass", "Path", "Name")
                        .IsUnique();

                    b.ToTable("TargetPropertyDefs");
                });

            modelBuilder.Entity("JsonBridgeEF.Models.Mapping.EntityKeyMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("JsonKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TargetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TargetPropertyDefId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TargetPropertyDefId");

                    b.HasIndex("JsonKey", "TargetPropertyDefId")
                        .IsUnique();

                    b.ToTable("EntityKeyMappings");
                });

            modelBuilder.Entity("JsonBridgeEF.Models.Mapping.MappingProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("JsonSchemaDefId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("TargetDbContextDefId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("JsonSchemaDefId");

                    b.HasIndex("TargetDbContextDefId");

                    b.ToTable("MappingProjects", (string)null);
                });

            modelBuilder.Entity("JsonBridgeEF.Models.Mapping.MappingRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("JsFormula")
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<int>("JsonFieldDefId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MappingProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TargetPropertyDefId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("JsonFieldDefId");

                    b.HasIndex("TargetPropertyDefId");

                    b.HasIndex("MappingProjectId", "JsonFieldDefId", "TargetPropertyDefId")
                        .IsUnique();

                    b.ToTable("MappingRules");
                });

            modelBuilder.Entity("JsonBridgeEF.Models.Mapping.Definitions.JsonFieldDef", b =>
                {
                    b.HasOne("JsonBridgeEF.Models.Mapping.Definitions.JsonSchemaDef", "JsonSchemaDef")
                        .WithMany("JsonFieldDefs")
                        .HasForeignKey("JsonSchemaDefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JsonSchemaDef");
                });

            modelBuilder.Entity("JsonBridgeEF.Models.Mapping.Definitions.TargetPropertyDef", b =>
                {
                    b.HasOne("JsonBridgeEF.Models.Mapping.Definitions.TargetDbContextDef", "TargetDbContextDef")
                        .WithMany()
                        .HasForeignKey("TargetDbContextDefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TargetDbContextDef");
                });

            modelBuilder.Entity("JsonBridgeEF.Models.Mapping.EntityKeyMapping", b =>
                {
                    b.HasOne("JsonBridgeEF.Models.Mapping.Definitions.TargetPropertyDef", "TargetPropertyDef")
                        .WithMany()
                        .HasForeignKey("TargetPropertyDefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TargetPropertyDef");
                });

            modelBuilder.Entity("JsonBridgeEF.Models.Mapping.MappingProject", b =>
                {
                    b.HasOne("JsonBridgeEF.Models.Mapping.Definitions.JsonSchemaDef", "JsonSchemaDef")
                        .WithMany()
                        .HasForeignKey("JsonSchemaDefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JsonBridgeEF.Models.Mapping.Definitions.TargetDbContextDef", "TargetDbContextDef")
                        .WithMany()
                        .HasForeignKey("TargetDbContextDefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JsonSchemaDef");

                    b.Navigation("TargetDbContextDef");
                });

            modelBuilder.Entity("JsonBridgeEF.Models.Mapping.MappingRule", b =>
                {
                    b.HasOne("JsonBridgeEF.Models.Mapping.Definitions.JsonFieldDef", "JsonFieldDef")
                        .WithMany()
                        .HasForeignKey("JsonFieldDefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JsonBridgeEF.Models.Mapping.MappingProject", "MappingProject")
                        .WithMany("MappingRules")
                        .HasForeignKey("MappingProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JsonBridgeEF.Models.Mapping.Definitions.TargetPropertyDef", "TargetPropertyDef")
                        .WithMany()
                        .HasForeignKey("TargetPropertyDefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JsonFieldDef");

                    b.Navigation("MappingProject");

                    b.Navigation("TargetPropertyDef");
                });

            modelBuilder.Entity("JsonBridgeEF.Models.Mapping.Definitions.JsonSchemaDef", b =>
                {
                    b.Navigation("JsonFieldDefs");
                });

            modelBuilder.Entity("JsonBridgeEF.Models.Mapping.MappingProject", b =>
                {
                    b.Navigation("MappingRules");
                });
#pragma warning restore 612, 618
        }
    }
}
