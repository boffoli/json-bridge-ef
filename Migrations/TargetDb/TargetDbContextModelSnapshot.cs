// <auto-generated />
using JsonBridgeEF.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JsonBridgeEF.Migrations.TargetDb
{
    [DbContext(typeof(TargetDbContext))]
    partial class TargetDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("JsonBridgeEF.Models.TargetDb.Metadata", b =>
                {
                    b.Property<int>("MetadataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MetadataId");

                    b.ToTable("Metadata");
                });

            modelBuilder.Entity("JsonBridgeEF.Models.TargetDb.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ContactId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JsonBridgeEF.Models.TargetDb.UserContact", b =>
                {
                    b.Property<int>("ContactId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullContactInfo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ContactId");

                    b.ToTable("UserContacts");
                });

            modelBuilder.Entity("JsonBridgeEF.Models.TargetDb.UserContact", b =>
                {
                    b.HasOne("JsonBridgeEF.Models.TargetDb.User", null)
                        .WithOne("Contact")
                        .HasForeignKey("JsonBridgeEF.Models.TargetDb.UserContact", "ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("JsonBridgeEF.Models.TargetDb.UserPreferences", "Preferences", b1 =>
                        {
                            b1.Property<int>("UserContactContactId")
                                .HasColumnType("INTEGER");

                            b1.Property<bool>("EmailNotifications")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Theme")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("UserContactContactId");

                            b1.ToTable("UserContacts");

                            b1.WithOwner()
                                .HasForeignKey("UserContactContactId");
                        });

                    b.Navigation("Preferences")
                        .IsRequired();
                });

            modelBuilder.Entity("JsonBridgeEF.Models.TargetDb.User", b =>
                {
                    b.Navigation("Contact");
                });
#pragma warning restore 612, 618
        }
    }
}
